/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("LED")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("RST")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk_50Mhz")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("count[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

SIGNAL("count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "count";
}

TRANSITION_LIST("LED[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("LED[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("LED[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("LED[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("RST")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("clk_50Mhz")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100000;
			LEVEL 0 FOR 0.005;
			LEVEL 1 FOR 0.005;
		}
	}
}

TRANSITION_LIST("count[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("count[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("count[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("count[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("count[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("count[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("count[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("count[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 655.355;
		LEVEL 1 FOR 344.645;
	}
}

TRANSITION_LIST("count[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 327.675;
		LEVEL 1 FOR 327.68;
		LEVEL 0 FOR 327.68;
		LEVEL 1 FOR 16.965;
	}
}

TRANSITION_LIST("count[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 163.835;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 163.84;
			LEVEL 0 FOR 163.84;
		}
		LEVEL 1 FOR 163.84;
		LEVEL 0 FOR 16.965;
	}
}

TRANSITION_LIST("count[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 81.915;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 81.92;
			LEVEL 0 FOR 81.92;
		}
		LEVEL 1 FOR 81.92;
		LEVEL 0 FOR 16.965;
	}
}

TRANSITION_LIST("count[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.955;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 40.96;
			LEVEL 0 FOR 40.96;
		}
		LEVEL 1 FOR 40.96;
		LEVEL 0 FOR 16.965;
	}
}

TRANSITION_LIST("count[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.475;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 20.48;
			LEVEL 0 FOR 20.48;
		}
		LEVEL 1 FOR 20.48;
		LEVEL 0 FOR 16.965;
	}
}

TRANSITION_LIST("count[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.235;
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 10.24;
			LEVEL 0 FOR 10.24;
		}
		LEVEL 1 FOR 6.725;
	}
}

TRANSITION_LIST("count[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.115;
		NODE
		{
			REPEAT = 97;
			LEVEL 1 FOR 5.12;
			LEVEL 0 FOR 5.12;
		}
		LEVEL 1 FOR 1.605;
	}
}

TRANSITION_LIST("count[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.555;
		NODE
		{
			REPEAT = 194;
			LEVEL 1 FOR 2.56;
			LEVEL 0 FOR 2.56;
		}
		LEVEL 1 FOR 2.56;
		LEVEL 0 FOR 1.605;
	}
}

TRANSITION_LIST("count[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.275;
		NODE
		{
			REPEAT = 390;
			LEVEL 1 FOR 1.28;
			LEVEL 0 FOR 1.28;
		}
		LEVEL 1 FOR 0.325;
	}
}

TRANSITION_LIST("count[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.635;
		NODE
		{
			REPEAT = 780;
			LEVEL 1 FOR 0.64;
			LEVEL 0 FOR 0.64;
		}
		LEVEL 1 FOR 0.64;
		LEVEL 0 FOR 0.325;
	}
}

TRANSITION_LIST("count[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.315;
		NODE
		{
			REPEAT = 1562;
			LEVEL 1 FOR 0.32;
			LEVEL 0 FOR 0.32;
		}
		LEVEL 1 FOR 0.005;
	}
}

TRANSITION_LIST("count[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.155;
		NODE
		{
			REPEAT = 3124;
			LEVEL 1 FOR 0.16;
			LEVEL 0 FOR 0.16;
		}
		LEVEL 1 FOR 0.16;
		LEVEL 0 FOR 0.005;
	}
}

TRANSITION_LIST("count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.075;
		NODE
		{
			REPEAT = 6249;
			LEVEL 1 FOR 0.08;
			LEVEL 0 FOR 0.08;
		}
		LEVEL 1 FOR 0.08;
		LEVEL 0 FOR 0.005;
	}
}

TRANSITION_LIST("count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.035;
		NODE
		{
			REPEAT = 12499;
			LEVEL 1 FOR 0.04;
			LEVEL 0 FOR 0.04;
		}
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.005;
	}
}

TRANSITION_LIST("count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.015;
		NODE
		{
			REPEAT = 24999;
			LEVEL 1 FOR 0.02;
			LEVEL 0 FOR 0.02;
		}
		LEVEL 1 FOR 0.02;
		LEVEL 0 FOR 0.005;
	}
}

TRANSITION_LIST("count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.005;
		NODE
		{
			REPEAT = 49999;
			LEVEL 1 FOR 0.01;
			LEVEL 0 FOR 0.01;
		}
		LEVEL 1 FOR 0.01;
		LEVEL 0 FOR 0.005;
	}
}

DISPLAY_LINE
{
	CHANNEL = "LED";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "LED[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RST";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_50Mhz";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31;
}

DISPLAY_LINE
{
	CHANNEL = "count[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 7;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
